// ============================== 클래스 : 저장_프로퍼티, 인스턴스_메소드, 인스턴스생성 ================================
// 중요 : 클래스로부터 만들어진 객체를 인스턴스라고 한다
// 클래스란? => 설계도가 건물이 완성된 후의 모습을 나타내고 있는 것처럼, class는 object가 생성되었을 때 어떠한 모습을 보일 것인지를 정의
// ex) int x => int가 클래스, x가 인스턴스

// 사용법과 구성요소들 : 스위프트 클래스 선언하기 ====================================================================
// class 새로운_클래스이름 : 부모 클래스 {
//     프로퍼티
//     인스턴스_메서드
//     타입_메서드(클래스 메서드)
// }

//
// “프로퍼티”        =>  부분은 클래스 내에 포함되는 변수(var)와 상수(let)를 정의한다.
// “인스턴스_메서드”   =>  객체가 호출하는 메서드를 정의한다.
// “타입 메서드”      =>  클래스가 호출하는 메서드를 정의한다.

// ====================================== 클래스에 "프로퍼티" 추가하기 ==========================================
// 클래스의 프로퍼티에는 "저장 프로퍼티"와 "계산 프로퍼티" 두 가지가 있다.

// "저장 프로퍼티" ===========================================================================================
// "저장 프로퍼티"는 반드시 세 가지 조건 중 한 가지는 만족해야한다.
// 1. 초깃값이 있어야 한다.
// 2.init을 이용해 초기화해야한다.
// 3. 옵셔널 변수(상수)로 선언(자동으로 nil로 초기화)
// 조건1, 조건3 실습
class Man1{
    var age : Int = 1    // 조건1 =>  stored property는 초기값이 있어야 함
    var weight : Double! // 조건1,조건3 =>  stored property는 초기값이 있어야 함, nil
}

// ===================== 클래스에 "프로퍼티"와 "인스턴스_메소드"를 만들고, 인스턴스를 만들어 접근하기 ========================

// 인스턴스 메서드는 인스턴스에서 동작
class Man2{
    var age : Int = 25          // "저장 프로퍼티" 생성
    var weight : Double = 81.5  // "저장 프로퍼티" 생성
    func display(){             // "인스턴스_메서드", 클래스 안의 함수
        print("나이=\(age), 몸무게=\(weight)")
    }
}

// 인스턴스 생성법 => var 인스턴스명 : 클래스명 = 클래스명()
// : 클래스명 은 생략 가능하다
// 마지막 클래스명몊에 ()는 눈에 보이지 않는 default initializer를 나타낸다
var hwang : Man2 = Man2() // var hwang = Man2() 도 가능

hwang.age // 인스턴스.프로퍼티
hwang.display() // 인스턴스.인스턴스_매소드

